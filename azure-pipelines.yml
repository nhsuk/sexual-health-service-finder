trigger:
  batch: true
  branches:
    include:
    - azdevops-sexual-health-finder
    - refs/tags/*

pr:
  branches:
    include:
    - azdevops-sexual-health-finder

variables:
  DOCKER_IMAGE_NAME: 'nhsuk/nhsuk-azdo-shf'
  DEVELOPMENT_BRANCH: 'azdevops-sexual-health-finder'
  COVERALLS_REPO_TOKEN: $(SECRET_COVERALLS_REPO_TOKEN)
  CI_NAME: 'Azure DevOps'
  CI_BUILD_NUMBER: $(Build.BuildNumber)
  CI_BUILD_URL: 'https://$(System.TeamFoundationCollectionUri)/$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)'
  CI_BRANCH: $(Build.SourceBranchName)
  CI_PULL_REQUEST: $(System.PullRequest.PullRequestId)

jobs:
- job: docker
  displayName: Push Docker Images
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - task: Docker@1
    displayName: login
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryEndpoint: 'sexual-health'
      command: login
  - bash: |
      docker-compose -p test-ci -f docker-compose-tests.yml -e CI_NAME -e CI_BUILD_NUMBER -e CI_BUILD_URL -e CI_BRANCH -e CI_PULL_REQUEST run test-ci
    displayName: Run tests
  - bash: |
      DOCKER_TAGS=()
      
      PRID=`echo $BUILD_SOURCEBRANCH | sed -E -n -e's:refs/pull/([0-9]+)/merge:\1:p'`
      
      if [ -n "$PRID" ]; then
        DOCKER_TAGS+=("pr-$PRID")
        RELEASE_STAGE=PR
        PARTIAL_BUILD_NAME="PR-$PRID"
      fi
      
      if [ "$BUILD_SOURCEBRANCH" = "refs/heads/$DEVELOPMENT_BRANCH" ]; then
        DOCKER_TAGS+=("master" "latest")
        RELEASE_STAGE=master
        PARTIAL_BUILD_NAME="master"
      fi
      
      GIT_TAGS=$(git tag --points-at HEAD)
      for tag in $GIT_TAGS; do
        DOCKER_TAGS+=($tag)
      done

      if [ -n "$GIT_TAGS" ]; then
        echo "##vso[build.addbuildtag]release-candidate"
        PARTIAL_BUILD_NAME="$GIT_TAGS"
      fi
      
      if [ -z "$DOCKER_TAGS" ]; then
        echo "Incorrect branch, non-PR: $BUILD_SOURCEBRANCH"
        exit 1
      else
        TAGS_ARGS=`for tag in ${DOCKER_TAGS[@]}; do echo "-t $DOCKER_IMAGE_NAME:$tag"; done | paste -sd' ' -`
        echo Running docker build . $TAGS_ARGS
        docker build . $TAGS_ARGS
        echo Pushing all images
        for tag in ${DOCKER_TAGS[@]}; do
          echo Pushing $tag
          docker push $DOCKER_IMAGE_NAME:$tag
        done
      fi
      
      if [ -n "$RELEASE_STAGE" ]; then
        echo "##vso[build.addbuildtag]$RELEASE_STAGE"
      fi
      
      if [ -n "$PARTIAL_BUILD_NAME" ]; then
        echo "##vso[build.updatebuildnumber]$PARTIAL_BUILD_NAME - $BUILD_BUILDNUMBER"
      fi
    displayName: 'Push docker image with correct tags'

- job: rancher
  displayName: Save rancher-config folder
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - task: CopyFiles@2
    displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)/rancher-config'
    inputs:
      sourceFolder: 'rancher-config'
      targetFolder: '$(Build.ArtifactStagingDirectory)/rancher-config'
      cleanTargetFolder: true
      overWrite: true
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'