name: $(BuildID)

trigger:
  batch: false
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

pr:
  autoCancel: true
  branches:
    include:
    - '*'

variables:
  DOCKER_IMAGE_NAME: 'nhsuk/sexual-health-service-finder'
  GITHUB_REPO_NAME: 'nhsuk/$(PROJECT_NAME)'
  PROJECT_NAME: 'sexual-health-service-finder'
  VAULT_SERVER: 'vault.nhswebsite.nhs.uk'

stages:
  - stage: build
    jobs:
    - job: RunTests
      displayName: 'Run tests and publish results including code coverage'
      pool:
        vmImage: 'Ubuntu 16.04'
      variables:
        COVERALLS_SERVICE_NAME: 'Azure Devops'
      steps:
      - bash: |
          ./scripts/devops/run-ci-tests
        env:
          COVERALLS_REPO_TOKEN: $(COVERALLS_REPO_TOKEN)
        displayName: 'Run tests, copy test artifacts to host and upload code coverage'
      - task: PublishCodeCoverageResults@1
        condition: succeededOrFailed()
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml'
      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testRunner: JUnit
          testResultsFiles: '$(System.DefaultWorkingDirectory)/test-results.xml'

    - job: PushImageToRepo
      dependsOn: RunTests
      condition: and(succeeded(), or(startsWith(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/pull/'), startsWith(variables['Build.SourceBranch'], 'refs/tags/')))
      displayName: 'Push image to repository'
      pool:
        vmImage: 'Ubuntu 16.04'
      steps:
      - task: Docker@1
        displayName: 'Login to Docker Hub'
        inputs:
          containerregistrytype: 'Container Registry'
          dockerRegistryEndpoint: 'sexual-health'
          command: login
      - bash: ./scripts/devops/push-image
        displayName: 'Push image to Docker Hub'

  - stage: deployReviewEnvironment
    dependsOn: build
    # Create review environment for every PR
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/pull/'))
    displayName: 'Deploy Review Environment'
    jobs:
      - job: DeployReviewEnvironment
        pool:
          vmImage: 'Ubuntu 16.04'
        variables:
          RELEASE_ENVIRONMENTNAME: 'dev'
        steps:
          - bash: ./scripts/devops/deploy-environment
            env:
              VAULT_TOKEN: $(VAULT_TOKEN)
            displayName: 'Deploy Review Environment'

  - stage: deployDevEnvironment
    dependsOn: build
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: 'Deploy Dev Environment'
    jobs:
      - job: DeployDevEnvironment
        pool:
          vmImage: 'Ubuntu 16.04'
        variables:
          RELEASE_ENVIRONMENTNAME: 'dev'
        steps:
          - bash: ./scripts/devops/deploy-environment
            env:
              VAULT_TOKEN: $(VAULT_TOKEN)
            displayName: 'Deploy Dev Environment'

  - stage: deployStagingEnvironment
    dependsOn: deployDevEnvironment
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/*'))
    displayName: 'Deploy Staging Environment'
    jobs:
      - job: DeployStagingEnvironment
        pool:
          vmImage: 'Ubuntu 16.04'
        variables:
          RELEASE_ENVIRONMENTNAME: 'staging'
        steps:
          - bash: ./scripts/devops/deploy-environment
            env:
              VAULT_TOKEN: $(VAULT_TOKEN)
            displayName: 'Deploy Staging Environment'
