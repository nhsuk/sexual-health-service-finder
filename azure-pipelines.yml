name: $(BuildID)

trigger:
  batch: false
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

pr:
  autoCancel: true
  branches:
    include:
    - '*'

variables:
  DOCKER_IMAGE_NAME: 'nhsuk/sexual-health-service-finder'

stages:
  - stage: build
    jobs:
    - job: RunTests
      displayName: 'Run tests and publish results including code coverage'
      pool:
        vmImage: 'Ubuntu 16.04'
      variables:
        COVERALLS_SERVICE_NAME: 'Azure Devops'
      steps:
      - bash: |
          ./scripts/devops/test-ci
        env:
          COVERALLS_REPO_TOKEN: $(COVERALLS_REPO_TOKEN)
        displayName: 'Run tests, copy test artifacts to host and upload code coverage'

      - task: PublishCodeCoverageResults@1
        condition: succeededOrFailed()
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml'

      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testRunner: JUnit
          testResultsFiles: '$(System.DefaultWorkingDirectory)/test-results.xml'

    - job: PushImageToRepo
      dependsOn: RunTests
      condition: and(succeeded(), or(startsWith(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/pull/'), startsWith(variables['Build.SourceBranch'], 'refs/tags/')))
      displayName: 'Push image to repository'
      pool:
        vmImage: 'Ubuntu 16.04'
      steps:
      - task: Docker@1
        displayName: 'Login to Docker Hub'
        inputs:
          containerregistrytype: 'Container Registry'
          dockerRegistryEndpoint: 'sexual-health'
          command: login

      - bash: ./scripts/devops/push-image
        displayName: 'Push image to Docker Hub'

  - stage: release
    displayName: 'Deploy Review Environment'
    variables:
      GITHUB_REPO_NAME: 'nhsuk/$(PROJECT_NAME)'
      PROJECT_NAME: 'sexual-health-service-finder'
      VAULT_SERVER: 'vault.nhswebsite.nhs.uk'
    jobs:
      - job: DeployReviewEnvironment
        condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/pull/'))
        pool:
          vmImage: 'Ubuntu 16.04'
        variables:
          RELEASE_ENVIRONMENTNAME: 'dev'
        steps:
          - bash: ./scripts/devops/deploy-environment
            env:
              VAULT_TOKEN: $(VAULT_TOKEN)
            displayName: 'Setup variables'
