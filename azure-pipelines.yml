name: $(BuildID)

trigger:
  batch: false
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

pr:
  autoCancel: true
  branches:
    include:
    - '*'

jobs:
- job: tests
  displayName: 'Run tests'
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - bash: |
      export COVERALLS_SERVICE_NAME='Azure Devops'
      export COVERALLS_REPO_TOKEN=$(PIPELINE_COVERALLS_REPO_TOKEN)
      ./scripts/devops/test-ci
    displayName: 'Run tests, copy test artifacts to host and upload code coverage'

  - task: PublishCodeCoverageResults@1
    condition: succeededOrFailed()
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testRunner: JUnit
      testResultsFiles: '$(System.DefaultWorkingDirectory)/test-results.xml'

- job: docker
  dependsOn: tests
  condition: and(succeeded(), or(startsWith(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/pull/'), startsWith(variables['Build.SourceBranch'], 'refs/tags/')))
  displayName: 'Push Docker images'
  pool:
    vmImage: 'Ubuntu 16.04'
  variables:
    DOCKER_IMAGE_NAME: 'nhsuk/sexual-health-service-finder'
  steps:
  - task: Docker@1
    displayName: 'Login to docker hub'
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryEndpoint: 'sexual-health'
      command: login

  - bash: ./scripts/devops/set-variables
    displayName: 'Set variables for future tasks'

  - bash: ./scripts/devops/push-image
    displayName: 'Push image to docker hub'

- job: rancher
  dependsOn: tests
  displayName: 'Save rancher-config folder'
  pool:
    vmImage: 'Ubuntu 16.04'
  steps:
  - task: CopyFiles@2
    displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)/rancher-config'
    inputs:
      sourceFolder: 'rancher-config'
      targetFolder: '$(Build.ArtifactStagingDirectory)/rancher-config'
      cleanTargetFolder: true
      overWrite: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
